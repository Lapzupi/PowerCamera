/*
 * This file is generated by jOOQ.
 */
package nl.svenar.powercamera.storage.generated.tables;


import java.util.function.Function;

import nl.svenar.powercamera.storage.generated.DefaultSchema;
import nl.svenar.powercamera.storage.generated.Keys;
import nl.svenar.powercamera.storage.generated.tables.records.PowercameraCommandsEndRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Function4;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Records;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.SelectField;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PowercameraCommandsEnd extends TableImpl<PowercameraCommandsEndRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>POWERCAMERA_COMMANDS_END</code>
     */
    public static final PowercameraCommandsEnd POWERCAMERA_COMMANDS_END = new PowercameraCommandsEnd();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PowercameraCommandsEndRecord> getRecordType() {
        return PowercameraCommandsEndRecord.class;
    }

    /**
     * The column <code>POWERCAMERA_COMMANDS_END.id</code>.
     */
    public final TableField<PowercameraCommandsEndRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>POWERCAMERA_COMMANDS_END.CAMERA_ID</code>.
     */
    public final TableField<PowercameraCommandsEndRecord, String> CAMERA_ID = createField(DSL.name("CAMERA_ID"), SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>POWERCAMERA_COMMANDS_END.order</code>.
     */
    public final TableField<PowercameraCommandsEndRecord, Integer> ORDER = createField(DSL.name("order"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>POWERCAMERA_COMMANDS_END.COMMAND</code>.
     */
    public final TableField<PowercameraCommandsEndRecord, String> COMMAND = createField(DSL.name("COMMAND"), SQLDataType.VARCHAR(300).nullable(false), this, "");

    private PowercameraCommandsEnd(Name alias, Table<PowercameraCommandsEndRecord> aliased) {
        this(alias, aliased, null);
    }

    private PowercameraCommandsEnd(Name alias, Table<PowercameraCommandsEndRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>POWERCAMERA_COMMANDS_END</code> table reference
     */
    public PowercameraCommandsEnd(String alias) {
        this(DSL.name(alias), POWERCAMERA_COMMANDS_END);
    }

    /**
     * Create an aliased <code>POWERCAMERA_COMMANDS_END</code> table reference
     */
    public PowercameraCommandsEnd(Name alias) {
        this(alias, POWERCAMERA_COMMANDS_END);
    }

    /**
     * Create a <code>POWERCAMERA_COMMANDS_END</code> table reference
     */
    public PowercameraCommandsEnd() {
        this(DSL.name("POWERCAMERA_COMMANDS_END"), null);
    }

    public <O extends Record> PowercameraCommandsEnd(Table<O> child, ForeignKey<O, PowercameraCommandsEndRecord> key) {
        super(child, key, POWERCAMERA_COMMANDS_END);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<PowercameraCommandsEndRecord, Integer> getIdentity() {
        return (Identity<PowercameraCommandsEndRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<PowercameraCommandsEndRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_6;
    }

    @Override
    public PowercameraCommandsEnd as(String alias) {
        return new PowercameraCommandsEnd(DSL.name(alias), this);
    }

    @Override
    public PowercameraCommandsEnd as(Name alias) {
        return new PowercameraCommandsEnd(alias, this);
    }

    @Override
    public PowercameraCommandsEnd as(Table<?> alias) {
        return new PowercameraCommandsEnd(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public PowercameraCommandsEnd rename(String name) {
        return new PowercameraCommandsEnd(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PowercameraCommandsEnd rename(Name name) {
        return new PowercameraCommandsEnd(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public PowercameraCommandsEnd rename(Table<?> name) {
        return new PowercameraCommandsEnd(name.getQualifiedName(), null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Function)}.
     */
    public <U> SelectField<U> mapping(Function4<? super Integer, ? super String, ? super Integer, ? super String, ? extends U> from) {
        return convertFrom(Records.mapping(from));
    }

    /**
     * Convenience mapping calling {@link SelectField#convertFrom(Class,
     * Function)}.
     */
    public <U> SelectField<U> mapping(Class<U> toType, Function4<? super Integer, ? super String, ? super Integer, ? super String, ? extends U> from) {
        return convertFrom(toType, Records.mapping(from));
    }
}

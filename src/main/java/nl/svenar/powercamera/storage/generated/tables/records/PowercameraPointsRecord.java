/*
 * This file is generated by jOOQ.
 */
package nl.svenar.powercamera.storage.generated.tables.records;


import nl.svenar.powercamera.storage.generated.tables.PowercameraPoints;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PowercameraPointsRecord extends UpdatableRecordImpl<PowercameraPointsRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>powercamera_points.NUM</code>.
     */
    public void setNum(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>powercamera_points.NUM</code>.
     */
    public Integer getNum() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>powercamera_points.CAMERA_ID</code>.
     */
    public void setCameraId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>powercamera_points.CAMERA_ID</code>.
     */
    public String getCameraId() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PowercameraPoints.POWERCAMERA_POINTS.NUM;
    }

    @Override
    public Field<String> field2() {
        return PowercameraPoints.POWERCAMERA_POINTS.CAMERA_ID;
    }

    @Override
    public Integer component1() {
        return getNum();
    }

    @Override
    public String component2() {
        return getCameraId();
    }

    @Override
    public Integer value1() {
        return getNum();
    }

    @Override
    public String value2() {
        return getCameraId();
    }

    @Override
    public PowercameraPointsRecord value1(Integer value) {
        setNum(value);
        return this;
    }

    @Override
    public PowercameraPointsRecord value2(String value) {
        setCameraId(value);
        return this;
    }

    @Override
    public PowercameraPointsRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PowercameraPointsRecord
     */
    public PowercameraPointsRecord() {
        super(PowercameraPoints.POWERCAMERA_POINTS);
    }

    /**
     * Create a detached, initialised PowercameraPointsRecord
     */
    public PowercameraPointsRecord(Integer num, String cameraId) {
        super(PowercameraPoints.POWERCAMERA_POINTS);

        setNum(num);
        setCameraId(cameraId);
    }
}
